service: viva-ms

plugins:
  - serverless-bundle

projectDir: ../../

custom: ${file(../../serverless.common.yml):custom}

package:
  individually: true

provider:
  lambdaHashingVersion: 20201221
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-north-1
  endpointType: regional
  tracing:
    apiGateway: false
    lambda: true

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - SSM:GetParameter*
          Resource:
            - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../config.json):${self:custom.stage}.vada.envsKeyName}"
            - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../config.json):${self:custom.stage}.cases.providers.viva.envsKeyName}"

        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: "*"

        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - Fn::ImportValue: ${self:custom.resourcesStage}-AttachmentsBucketArn
            - Fn::Join:
                - ""
                - - Fn::ImportValue: ${self:custom.resourcesStage}-AttachmentsBucketArn
                  - "/*"

        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:Query
          Resource:
            - "Fn::ImportValue": ${self:custom.resourcesStage}-CasesTableArn

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
          Resource:
            - "Fn::ImportValue": ${self:custom.resourcesStage}-UsersTableArn

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
          Resource:
            - "Fn::ImportValue": ${self:custom.resourcesStage}-FormsTableArn

        - Effect: Allow
          Action:
            - kms:Decrypt
          Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*

functions:
  submitApplication:
    handler: lambdas/submitApplication.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  provider:
                    S: ["VIVA"]
                  status:
                    M:
                      type:
                        S: [{ "prefix": "active:submitted" }]
                  pdfGenerated:
                    S: ["yes"]

  syncOfficers:
    handler: lambdas/syncOfficers.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - INSERT
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  provider:
                    S: ["VIVA"]

  createVivaCase:
    handler: lambdas/createVivaCase.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - usersMs.findUser
            detail-type:
              - usersMsFindUserSuccess

  syncWorkflow:
    handler: lambdas/syncWorkflow.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - bankId.collect
            detail-type:
              - BankIdCollectComplete

  decideCaseStatus:
    handler: lambdas/decideCaseStatus.main
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.syncWorkflow
            detail-type:
              - vivaMsSyncWorkflowSuccess

  syncExpiryTime:
    handler: lambdas/syncExpiryTime.main
    events:
      - eventBridge:
          pattern:
            source:
              - casesApi.updateCase
            detail-type:
              - casesApiUpdateCaseSuccess

  checkCompletion:
    handler: lambdas/checkCompletion.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.submitApplication
            detail-type:
              - vivaMsSubmitApplicationSuccess

  submitCompletion:
    handler: lambdas/submitCompletion.main
    timeout: 15
    environment:
      BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  provider:
                    S: ["VIVA"]
                  status:
                    M:
                      type:
                        S: [{ "prefix": "active:submitted" }]
    
  generateRecurringCaseHtml:
    handler: lambdas/generateRecurringCaseHtml.main
    timeout: 15
    environment:
      PDF_STORAGE_BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-PdfStorageBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  provider:
                    S: ["VIVA"]
                  status:
                    M:
                      type:
                        S: [{ "prefix": "active:submitted" }]
    