service: viva-ms

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-s3-remover

custom: ${file(../../serverless.common.yml):custom}

package:
  individually: true

provider:
  lambdaHashingVersion: 20201221
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-north-1
  endpointType: regional
  tracing:
    apiGateway: false
    lambda: true

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - SSM:GetParameter
      Resource: "*"
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        - Fn::ImportValue: ${self:custom.resourcesStage}-AttachmentsBucketArn
        - Fn::Join:
            - ""
            - - Fn::ImportValue: ${self:custom.resourcesStage}-AttachmentsBucketArn
              - "/*"
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        - Fn::ImportValue: ${self:custom.resourcesStage}-AttachmentsBucketArn
        - Fn::Join:
            - ""
            - - Fn::ImportValue: ${self:custom.resourcesStage}-AttachmentsBucketArn
              - "/*"
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:Query
      # Restrict our IAM role permissions to the specific table for the stage
      Resource:
        - "Fn::ImportValue": ${self:custom.resourcesStage}-CasesTableArn

functions:
  submitApplication:
    handler: lambdas/submitApplication.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  provider:
                    S: ["VIVA"]
                  status:
                    M:
                      type:
                        S: ["active:submitted:viva"]
                  pdfGenerated:
                    S: ["yes"]

  syncOfficers:
    handler: lambdas/syncOfficers.main
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - INSERT
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  provider:
                    S: ["VIVA"]

  createVivaCase:
    handler: lambdas/createVivaCase.main
    timeout: 15
    events:
      - eventBridge:
          pattern:
            source:
              - bankId.collect
            detail-type:
              - BankIdCollectComplete

  syncWorkflowAndSetStatus:
    handler: lambdas/syncWorkflowAndSetStatus.main
    events:
      - eventBridge:
          pattern:
            source:
              - bankId.collect
            detail-type:
              - BankIdCollectComplete

  checkCompletion:
    handler: lambdas/checkCompletion.main
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.submitApplication

  submitCompletion:
    handler: lambdas/submitCompletion.main
    environment:
      BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  status:
                    M:
                      type:
                        S: [{ "prefix": "active:submitted:viva" }]
