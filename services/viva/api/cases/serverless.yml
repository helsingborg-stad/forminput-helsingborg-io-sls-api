org: hbgworks
service: viva-cases-api

frameworkVersion: ^3.26.0

plugins:
  - serverless-bundle

custom: ${file(../../../../serverless.common.yml):custom}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-north-1
  endpointType: regional
  versionFunctions: false
  tracing:
    lambda: true

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  apiGateway:
    restApiId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiRootResourceId
    restApiResources:
      viva-cases: !ImportValue ${self:custom.stage}-ExtApiGatewayResourceVivaCases

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - SSM:GetParameter*
          Resource:
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../../../config.json):${self:custom.stage}.vada.envsKeyName}'
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../../../config.json):${self:custom.stage}.cases.providers.viva.envsKeyName}'

        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: '*'

        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
            - dynamodb:GetItem
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-CasesTableArn

        - Effect: Allow
          Action:
            - dynamodb:GetItem
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-FormsTableArn

        - Effect: Allow
          Action:
            - kms:Decrypt
          Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*

functions:
  addCasePerson:
    handler: src/lambdas/addCasePerson.main
    environment:
      badRequestMessage: ''
      forbiddenMessage: ''
    timeout: 15
    events:
      - http:
          path: /viva-cases/{caseId}/persons
          method: put
          cors: true
          private: true
          authorizer:
            type: TOKEN
            authorizerId: !ImportValue ${self:custom.stage}-authorizerId
