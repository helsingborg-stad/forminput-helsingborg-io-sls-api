org: hbgworks
service: viva-ms

frameworkVersion: ^3.26.0

plugins:
  - serverless-bundle

custom: ${file(../../../serverless.common.yml):custom}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-north-1
  versionFunctions: false
  tracing:
    apiGateway: false
    lambda: true

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - SSM:GetParameter*
          Resource:
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../../config.json):${self:custom.stage}.vada.envsKeyName}'
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../../config.json):${self:custom.stage}.cases.providers.viva.envsKeyName}'
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../../config.json):${self:custom.stage}.vivaNewApplication.envsKeyName}'

        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: '*'

        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketArn
            - !Join
              - ''
              - - !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketArn
                - '/*'
            - !ImportValue ${self:custom.resourcesStage}-PdfStorageBucketArn
            - !Join
              - ''
              - - !ImportValue ${self:custom.resourcesStage}-PdfStorageBucketArn
                - '/*'

        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:GetItem
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-CasesTableArn

        - Effect: Allow
          Action:
            - dynamodb:Query
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-CasesTableAllIndexArn

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-UsersTableArn

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-FormsTableArn

        - Effect: Allow
          Action:
            - kms:Decrypt
            - kms:GenerateDataKey
          Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*

        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-VivaPeriodBucketArn
            - !Join
              - ''
              - - !ImportValue ${self:custom.resourcesStage}-VivaPeriodBucketArn
                - '/*'

        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - !ImportValue ${self:custom.resourcesStage}-EkbConfigBucketArn
            - !Join
              - ''
              - - !ImportValue ${self:custom.resourcesStage}-EkbConfigBucketArn
                - '/*'

functions:
  applicationStatus:
    handler: src/lambdas/applicationStatus.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - usersMs.findUser
              - vivaMs.submitApplication
            detail-type:
              - usersMsFindUserSuccess
              - applicationReceivedSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  personApplicationStatus:
    handler: src/lambdas/personApplicationStatus.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.applicationStatus
            detail-type:
              - applicationStatusSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  personApplication:
    handler: src/lambdas/personApplication.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.personApplicationStatus
            detail-type:
              - checkOpenPeriodSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  createNewVivaCase:
    handler: src/lambdas/createNewVivaCase.main
    reservedConcurrency: 1
    timeout: 30
    events:
      - eventBridge:
          enabled: false
          pattern:
            source:
              - vivaMs.personApplicationStatus
            detail-type:
              - checkOpenNewApplicationSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  createVivaCase:
    handler: src/lambdas/createVivaCase.main
    reservedConcurrency: 1
    timeout: 30
    environment:
      VIVA_PERIOD_BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-VivaPeriodBucketName
      EKB_CONFIG_BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-EkbConfigBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.personApplication
            detail-type:
              - personDetailSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  submitApplication:
    handler: src/lambdas/submitApplication.main
    timeout: 30
    environment:
      BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketName
    events:
      - sqs:
          arn: !ImportValue ${self:custom.stage}-VivaSubmissionQueueArn
          batchSize: 1

  syncWorkflow:
    handler: src/lambdas/syncWorkflow.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.applicationStatus
            detail-type:
              - applicationStatusSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  syncCaseCompletions:
    handler: src/lambdas/syncCaseCompletions.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.applicationStatus
            detail-type:
              - applicationStatusSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  decideCaseStatus:
    handler: src/lambdas/decideCaseStatus.main
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.syncCaseCompletions
            detail-type:
              - 'syncSuccess'
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  syncExpiryTime:
    handler: src/lambdas/syncExpiryTime.main
    events:
      - eventBridge:
          pattern:
            source:
              - 'vivaMs.decideCaseStatus'
            detail-type:
              - decideCaseStatusSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  checkCompletionsStatus:
    handler: src/lambdas/checkCompletionsStatus.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - 'vivaMs.decideCaseStatus'
            detail-type:
              - decideCaseStatusSuccess
            detail:
              caseState: [{ 'anything-but': 'VIVA_APPLICATION_LOCKED' }]
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  setCaseCompletions:
    handler: src/lambdas/setCaseCompletions.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.checkCompletionsStatus
            detail-type:
              - checkCompletionsStatusRequired
            detail:
              caseStatusType: [{ 'anything-but': { 'prefix': 'active:ongoing' } }]
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  checkCompletionsDueDate:
    handler: src/lambdas/checkCompletionsDueDate.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.checkCompletionsStatus
            detail-type:
              - 'Completions Due Date Probably Overdue'
            detail:
              caseStatusType: [{ 'anything-but': { 'prefix': 'active:processing' } }]
              caseState: [{ 'anything-but': 'VIVA_APPLICATION_LOCKED' }]
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  submitCompletion:
    handler: src/lambdas/submitCompletion.main
    timeout: 30
    environment:
      BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - casesApi.updateCase
            detail-type:
              - casesApiUpdateCaseSuccess
            detail:
              status:
                type: [{ 'prefix': 'active:submitted' }]
              state: ['VIVA_RANDOM_CHECK_REQUIRED', 'VIVA_COMPLETION_REQUIRED']
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  syncOfficers:
    handler: src/lambdas/syncOfficers.main
    timeout: 30
    events:
      - eventBridge:
          pattern:
            source:
              - vivaMs.createVivaCase
            detail-type:
              - createSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  syncNewCaseWorkflowId:
    handler: src/lambdas/syncNewCaseWorkflowId.main
    timeout: 30
    events:
      - eventBridge:
          enabled: false
          pattern:
            source:
              - vivaMs.applicationStatus
            detail-type:
              - applicationStatusSuccess
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  generateRecurringCaseHtml:
    handler: src/lambdas/generateRecurringCaseHtml.main
    environment:
      PDF_STORAGE_BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-PdfStorageBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - casesApi.updateCase
            detail-type:
              - casesApiUpdateCaseSuccess
            detail:
              status:
                type: [{ 'prefix': 'active:submitted' }]
              state: ['VIVA_CASE_CREATED']
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn

  copyAttachment:
    handler: src/lambdas/copyAttachment.main
    environment:
      BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketName
    events:
      - eventBridge:
          pattern:
            source:
              - 'aws.s3'
            detail-type:
              - 'Object Created'
            detail:
              bucket:
                name:
                  - !ImportValue ${self:custom.resourcesStage}-AttachmentsBucketName
              reason:
                - 'PutObject'
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 3
          deadLetterQueueArn: !ImportValue ${self:custom.resourcesStage}-EventBridgeDeadLetterQueueArn
