service: pdf-ms

plugins:
  - serverless-webpack

projectDir: ../../

custom:
  stage: ${opt:stage, self:provider.stage}
  resourcesStages:
    prod: prod
    stage: stage
    dev: dev
    test: test
    release: release
  resourcesStage: ${self:custom.resourcesStages.${self:custom.stage}, self:custom.resourcesStages.dev}
  webpack:
    webpackConfig: webpack.config.js
    packager: "yarn"

package:
  individually: true

provider:
  lambdaHashingVersion: 20201221
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-north-1
  endpointType: regional
  tracing:
    apiGateway: false
    lambda: true

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - SSM:GetParameter*
          Resource: 
            - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../config.json):${self:custom.stage}.pdf.envsKeyName}"

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:UpdateItem
          Resource:
            - Fn::ImportValue: ${self:custom.resourcesStage}-CasesTableArn

        - Effect: Allow
          Action:
            - dynamodb:GetItem
          Resource:
            - "Fn::ImportValue": ${self:custom.resourcesStage}-UsersTableArn

        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
          Resource:
            - Fn::ImportValue: ${self:custom.resourcesStage}-PdfTemplatesBucketArn
            - Fn::Join:
                - ""
                - - Fn::ImportValue: ${self:custom.resourcesStage}-PdfTemplatesBucketArn
                  - "/*"
        - Effect: Allow
          Action:
            - kms:Decrypt
          Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*

functions:
  addPdfToCase:
    handler: lambdas/addPdfToCase.main
    environment:
      BUCKET_NAME: !ImportValue ${self:custom.resourcesStage}-PdfTemplatesBucketName

    events:
      - eventBridge:
          pattern:
            source:
              - cases.database
            detail-type:
              - INSERT
              - MODIFY
            detail:
              dynamodb:
                NewImage:
                  status:
                    M:
                      type:
                        S: [{"prefix": "active:submitted"}]
