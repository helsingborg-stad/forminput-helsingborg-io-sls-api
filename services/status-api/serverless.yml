service: status-api

plugins:
  - serverless-bundle
  - serverless-add-api-key

projectDir: ../../

custom: ${file(../../serverless.common.yml):custom}

package:
  individually: true

provider:
  lambdaHashingVersion: 20201221
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-north-1
  endpointType: regional
  tracing:
    lambda: true
  apiGateway:
    restApiId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiRootResourceId
    restApiResources:
      status: !ImportValue ${self:custom.stage}-ExtApiGatewayResourceStatus

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - SSM:GetParameter*
          Resource:
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../config.json):${self:custom.stage}.status.messages.envsKeyName}'

        - Effect: Allow
          Action:
            - kms:Decrypt
          Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*

functions:
  get:
    handler: src/lambdas/getApiStatus.main
    environment:
      message: ''
    events:
      - http:
          path: /status
          method: get
          private: true
          cors: true

  getMessages:
    handler: src/lambdas/getMessages.main
    events:
      - http:
          path: /status/messages
          method: get
          private: true
          cors: true
