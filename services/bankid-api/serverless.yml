service: bankid-api

plugins:
  - serverless-bundle
  - serverless-offline

custom: ${file(../../serverless.common.yml):custom}

package:
  individually: true

provider:
  lambdaHashingVersion: 20201221
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-north-1
  endpointType: regional
  tracing:
    apiGateway: true
    lambda: true
  apiGateway:
    restApiId:
      "Fn::ImportValue": ${self:custom.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId:
      "Fn::ImportValue": ${self:custom.stage}-ExtApiGatewayRestApiRootResourceId
    restApiResources:
      auth:
        "Fn::ImportValue": ${self:custom.stage}-ExtApiGatewayResourceAuth

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:getObject
          Resource: 
            - "Fn::Join": 
              - ""
              - - Fn::ImportValue: ${self:custom.stage}-CertificatesBucketArn
                - "/*"
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: "*"

        - Effect: Allow
          Action:
            - SSM:GetParameter
          Resource: "*"
            - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${file(../../config.json):${self:custom.stage}.bankId.envsKeyName}"
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource:
            - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret/${file(../../config.json):${self:custom.stage}.auth.secrets.accessToken.name}"
            - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret/${file(../../config.json):${self:custom.stage}.auth.secrets.refreshToken.name}"
            - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret/${file(../../config.json):${self:custom.stage}.auth.secrets.authorizationCode.name}"

functions:
  auth:
    handler: lambdas/auth.main
    events:
      - http:
          path: auth/bankid/auth
          method: post
          cors: true
  sign:
    handler: lambdas/sign.main
    events:
      - http:
          path: auth/bankid/sign
          method: post
          cors: true
  collect:
    handler: lambdas/collect.main
    events:
      - http:
          path: auth/bankid/collect
          method: post
          cors: true
  cancel:
    handler: lambdas/cancel.main
    events:
      - http:
          path: auth/bankid/cancel
          method: post
          cors: true
